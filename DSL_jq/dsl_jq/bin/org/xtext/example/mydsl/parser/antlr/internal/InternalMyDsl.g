/*
 * generated by Xtext 2.28.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getSentencesFunParserRuleCall_0());
			}
			lv_sentences_0_0=ruleFun
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"sentences",
					lv_sentences_0_0,
					"org.xtext.example.mydsl.MyDsl.Fun");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleFun
entryRuleFun returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunRule()); }
	iv_ruleFun=ruleFun
	{ $current=$iv_ruleFun.current; }
	EOF;

// Rule Fun
ruleFun returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunAccess().getCountJsonParserRuleCall_0());
		}
		this_CountJson_0=ruleCountJson
		{
			$current = $this_CountJson_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getReadJsonParserRuleCall_1());
		}
		this_ReadJson_1=ruleReadJson
		{
			$current = $this_ReadJson_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getWriteJsonParserRuleCall_2());
		}
		this_WriteJson_2=ruleWriteJson
		{
			$current = $this_WriteJson_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getWriteCSVParserRuleCall_3());
		}
		this_WriteCSV_3=ruleWriteCSV
		{
			$current = $this_WriteCSV_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getRemoveParserRuleCall_4());
		}
		this_Remove_4=ruleRemove
		{
			$current = $this_Remove_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getAddParserRuleCall_5());
		}
		this_Add_5=ruleAdd
		{
			$current = $this_Add_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getGetParserRuleCall_6());
		}
		this_Get_6=ruleGet
		{
			$current = $this_Get_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getSortParserRuleCall_7());
		}
		this_Sort_7=ruleSort
		{
			$current = $this_Sort_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCountJson
entryRuleCountJson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountJsonRule()); }
	iv_ruleCountJson=ruleCountJson
	{ $current=$iv_ruleCountJson.current; }
	EOF;

// Rule CountJson
ruleCountJson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_countJSON_0_0='count'
				{
					newLeafNode(lv_countJSON_0_0, grammarAccess.getCountJsonAccess().getCountJSONCountKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCountJsonRule());
					}
					setWithLastConsumed($current, "countJSON", lv_countJSON_0_0, "count");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCountJsonAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_path_2_0=RULE_STRING
				{
					newLeafNode(lv_path_2_0, grammarAccess.getCountJsonAccess().getPathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCountJsonRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCountJsonAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleReadJson
entryRuleReadJson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadJsonRule()); }
	iv_ruleReadJson=ruleReadJson
	{ $current=$iv_ruleReadJson.current; }
	EOF;

// Rule ReadJson
ruleReadJson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_readJSON_0_0='readJSON'
				{
					newLeafNode(lv_readJSON_0_0, grammarAccess.getReadJsonAccess().getReadJSONReadJSONKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadJsonRule());
					}
					setWithLastConsumed($current, "readJSON", lv_readJSON_0_0, "readJSON");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getReadJsonAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_path_2_0=RULE_STRING
				{
					newLeafNode(lv_path_2_0, grammarAccess.getReadJsonAccess().getPathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadJsonRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getReadJsonAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleWriteJson
entryRuleWriteJson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWriteJsonRule()); }
	iv_ruleWriteJson=ruleWriteJson
	{ $current=$iv_ruleWriteJson.current; }
	EOF;

// Rule WriteJson
ruleWriteJson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_writeJSON_0_0='writeJSON'
				{
					newLeafNode(lv_writeJSON_0_0, grammarAccess.getWriteJsonAccess().getWriteJSONWriteJSONKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteJsonRule());
					}
					setWithLastConsumed($current, "writeJSON", lv_writeJSON_0_0, "writeJSON");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWriteJsonAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_path_2_0=RULE_STRING
				{
					newLeafNode(lv_path_2_0, grammarAccess.getWriteJsonAccess().getPathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteJsonRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getWriteJsonAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWriteJsonAccess().getFileJSONParserRuleCall_4_0());
				}
				lv_file_4_0=ruleJSON
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWriteJsonRule());
					}
					set(
						$current,
						"file",
						lv_file_4_0,
						"org.xtext.example.mydsl.MyDsl.JSON");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getWriteJsonAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleWriteCSV
entryRuleWriteCSV returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWriteCSVRule()); }
	iv_ruleWriteCSV=ruleWriteCSV
	{ $current=$iv_ruleWriteCSV.current; }
	EOF;

// Rule WriteCSV
ruleWriteCSV returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_writeCSV_0_0='writeCSV'
				{
					newLeafNode(lv_writeCSV_0_0, grammarAccess.getWriteCSVAccess().getWriteCSVWriteCSVKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCSVRule());
					}
					setWithLastConsumed($current, "writeCSV", lv_writeCSV_0_0, "writeCSV");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWriteCSVAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_path_2_0=RULE_STRING
				{
					newLeafNode(lv_path_2_0, grammarAccess.getWriteCSVAccess().getPathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCSVRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getWriteCSVAccess().getCommaKeyword_3());
		}
		(
			(
				lv_tabName_4_0=RULE_STRING
				{
					newLeafNode(lv_tabName_4_0, grammarAccess.getWriteCSVAccess().getTabNameSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCSVRule());
					}
					setWithLastConsumed(
						$current,
						"tabName",
						lv_tabName_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getWriteCSVAccess().getCommaKeyword_5());
		}
		(
			(
				lv_header_6_0=RULE_STRING
				{
					newLeafNode(lv_header_6_0, grammarAccess.getWriteCSVAccess().getHeaderSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCSVRule());
					}
					setWithLastConsumed(
						$current,
						"header",
						lv_header_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getWriteCSVAccess().getCommaKeyword_7());
		}
		(
			(
				lv_outputFile_8_0=RULE_STRING
				{
					newLeafNode(lv_outputFile_8_0, grammarAccess.getWriteCSVAccess().getOutputFileSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCSVRule());
					}
					setWithLastConsumed(
						$current,
						"outputFile",
						lv_outputFile_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getWriteCSVAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleRemove
entryRuleRemove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveRule()); }
	iv_ruleRemove=ruleRemove
	{ $current=$iv_ruleRemove.current; }
	EOF;

// Rule Remove
ruleRemove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_removeElement_0_0='remove'
				{
					newLeafNode(lv_removeElement_0_0, grammarAccess.getRemoveAccess().getRemoveElementRemoveKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRemoveRule());
					}
					setWithLastConsumed($current, "removeElement", lv_removeElement_0_0, "remove");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_id_2_0=RULE_INT
				{
					newLeafNode(lv_id_2_0, grammarAccess.getRemoveAccess().getIdINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRemoveRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getRemoveAccess().getCommaKeyword_3());
		}
		(
			(
				lv_tabName_4_0=RULE_STRING
				{
					newLeafNode(lv_tabName_4_0, grammarAccess.getRemoveAccess().getTabNameSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRemoveRule());
					}
					setWithLastConsumed(
						$current,
						"tabName",
						lv_tabName_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getRemoveAccess().getCommaKeyword_5());
		}
		(
			(
				lv_file_6_0=RULE_STRING
				{
					newLeafNode(lv_file_6_0, grammarAccess.getRemoveAccess().getFileSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRemoveRule());
					}
					setWithLastConsumed(
						$current,
						"file",
						lv_file_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getRemoveAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_addElement_0_0='add'
				{
					newLeafNode(lv_addElement_0_0, grammarAccess.getAddAccess().getAddElementAddKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddRule());
					}
					setWithLastConsumed($current, "addElement", lv_addElement_0_0, "add");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAddAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getFileJSONParserRuleCall_2_0());
				}
				lv_file_2_0=ruleJSON
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"file",
						lv_file_2_0,
						"org.xtext.example.mydsl.MyDsl.JSON");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getAddAccess().getCommaKeyword_3());
		}
		(
			(
				lv_id_4_0=RULE_INT
				{
					newLeafNode(lv_id_4_0, grammarAccess.getAddAccess().getIdINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getAddAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleGet
entryRuleGet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetRule()); }
	iv_ruleGet=ruleGet
	{ $current=$iv_ruleGet.current; }
	EOF;

// Rule Get
ruleGet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_getElement_0_0='get'
				{
					newLeafNode(lv_getElement_0_0, grammarAccess.getGetAccess().getGetElementGetKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGetRule());
					}
					setWithLastConsumed($current, "getElement", lv_getElement_0_0, "get");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getGetAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGetAccess().getFileJSONParserRuleCall_2_0());
				}
				lv_file_2_0=ruleJSON
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGetRule());
					}
					set(
						$current,
						"file",
						lv_file_2_0,
						"org.xtext.example.mydsl.MyDsl.JSON");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getGetAccess().getCommaKeyword_3());
		}
	)
;

// Entry rule entryRuleSort
entryRuleSort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortRule()); }
	iv_ruleSort=ruleSort
	{ $current=$iv_ruleSort.current; }
	EOF;

// Rule Sort
ruleSort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_sort_0_0='sort'
				{
					newLeafNode(lv_sort_0_0, grammarAccess.getSortAccess().getSortSortKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortRule());
					}
					setWithLastConsumed($current, "sort", lv_sort_0_0, "sort");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSortAccess().getFileJSONParserRuleCall_1_0());
				}
				lv_file_1_0=ruleJSON
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSortRule());
					}
					set(
						$current,
						"file",
						lv_file_1_0,
						"org.xtext.example.mydsl.MyDsl.JSON");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='by'
		{
			newLeafNode(otherlv_2, grammarAccess.getSortAccess().getByKeyword_2());
		}
		(
			(
				lv_attribute_3_0=RULE_STRING
				{
					newLeafNode(lv_attribute_3_0, grammarAccess.getSortAccess().getAttributeSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortRule());
					}
					setWithLastConsumed(
						$current,
						"attribute",
						lv_attribute_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleJSON
entryRuleJSON returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSONRule()); }
	iv_ruleJSON=ruleJSON
	{ $current=$iv_ruleJSON.current; }
	EOF;

// Rule JSON
ruleJSON returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='{'
			{
				newLeafNode(otherlv_0, grammarAccess.getJSONAccess().getLeftCurlyBracketKeyword_0_0());
			}
			(
				(
					(
						lv_attribute_1_0=RULE_ID
						{
							newLeafNode(lv_attribute_1_0, grammarAccess.getJSONAccess().getAttributeIDTerminalRuleCall_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getJSONRule());
							}
							addWithLastConsumed(
								$current,
								"attribute",
								lv_attribute_1_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				otherlv_2=';'
				{
					newLeafNode(otherlv_2, grammarAccess.getJSONAccess().getSemicolonKeyword_0_1_1());
				}
			)+
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getJSONAccess().getRightCurlyBracketKeyword_0_2());
			}
		)
		    |
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getJSONAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					(
						lv_attribute_5_0=RULE_STRING
						{
							newLeafNode(lv_attribute_5_0, grammarAccess.getJSONAccess().getAttributeSTRINGTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getJSONRule());
							}
							addWithLastConsumed(
								$current,
								"attribute",
								lv_attribute_5_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				otherlv_6='='
				{
					newLeafNode(otherlv_6, grammarAccess.getJSONAccess().getEqualsSignKeyword_1_1_1());
				}
				(
					(
						(
							lv_valueSTR_7_0=RULE_STRING
							{
								newLeafNode(lv_valueSTR_7_0, grammarAccess.getJSONAccess().getValueSTRSTRINGTerminalRuleCall_1_1_2_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getJSONRule());
								}
								addWithLastConsumed(
									$current,
									"valueSTR",
									lv_valueSTR_7_0,
									"org.eclipse.xtext.common.Terminals.STRING");
							}
						)
					)
					    |
					(
						(
							lv_valueINT_8_0=RULE_INT
							{
								newLeafNode(lv_valueINT_8_0, grammarAccess.getJSONAccess().getValueINTINTTerminalRuleCall_1_1_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getJSONRule());
								}
								addWithLastConsumed(
									$current,
									"valueINT",
									lv_valueINT_8_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
					    |
					(
						(
							lv_valueID_9_0=RULE_ID
							{
								newLeafNode(lv_valueID_9_0, grammarAccess.getJSONAccess().getValueIDIDTerminalRuleCall_1_1_2_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getJSONRule());
								}
								addWithLastConsumed(
									$current,
									"valueID",
									lv_valueID_9_0,
									"org.eclipse.xtext.common.Terminals.ID");
							}
						)
					)
				)
				otherlv_10=';'
				{
					newLeafNode(otherlv_10, grammarAccess.getJSONAccess().getSemicolonKeyword_1_1_3());
				}
			)+
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getJSONAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
