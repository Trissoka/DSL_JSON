/*
 * generated by Xtext 2.28.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getSentencesAssignment()); }
		(rule__Model__SentencesAssignment)*
		{ after(grammarAccess.getModelAccess().getSentencesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFun
entryRuleFun
:
{ before(grammarAccess.getFunRule()); }
	 ruleFun
{ after(grammarAccess.getFunRule()); } 
	 EOF 
;

// Rule Fun
ruleFun 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunAccess().getAlternatives()); }
		(rule__Fun__Alternatives)
		{ after(grammarAccess.getFunAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCountJson
entryRuleCountJson
:
{ before(grammarAccess.getCountJsonRule()); }
	 ruleCountJson
{ after(grammarAccess.getCountJsonRule()); } 
	 EOF 
;

// Rule CountJson
ruleCountJson 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCountJsonAccess().getGroup()); }
		(rule__CountJson__Group__0)
		{ after(grammarAccess.getCountJsonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReadJson
entryRuleReadJson
:
{ before(grammarAccess.getReadJsonRule()); }
	 ruleReadJson
{ after(grammarAccess.getReadJsonRule()); } 
	 EOF 
;

// Rule ReadJson
ruleReadJson 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReadJsonAccess().getGroup()); }
		(rule__ReadJson__Group__0)
		{ after(grammarAccess.getReadJsonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWriteJson
entryRuleWriteJson
:
{ before(grammarAccess.getWriteJsonRule()); }
	 ruleWriteJson
{ after(grammarAccess.getWriteJsonRule()); } 
	 EOF 
;

// Rule WriteJson
ruleWriteJson 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWriteJsonAccess().getGroup()); }
		(rule__WriteJson__Group__0)
		{ after(grammarAccess.getWriteJsonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWriteCSV
entryRuleWriteCSV
:
{ before(grammarAccess.getWriteCSVRule()); }
	 ruleWriteCSV
{ after(grammarAccess.getWriteCSVRule()); } 
	 EOF 
;

// Rule WriteCSV
ruleWriteCSV 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWriteCSVAccess().getGroup()); }
		(rule__WriteCSV__Group__0)
		{ after(grammarAccess.getWriteCSVAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemove
entryRuleRemove
:
{ before(grammarAccess.getRemoveRule()); }
	 ruleRemove
{ after(grammarAccess.getRemoveRule()); } 
	 EOF 
;

// Rule Remove
ruleRemove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveAccess().getGroup()); }
		(rule__Remove__Group__0)
		{ after(grammarAccess.getRemoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getGroup()); }
		(rule__Add__Group__0)
		{ after(grammarAccess.getAddAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGet
entryRuleGet
:
{ before(grammarAccess.getGetRule()); }
	 ruleGet
{ after(grammarAccess.getGetRule()); } 
	 EOF 
;

// Rule Get
ruleGet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGetAccess().getGroup()); }
		(rule__Get__Group__0)
		{ after(grammarAccess.getGetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSort
entryRuleSort
:
{ before(grammarAccess.getSortRule()); }
	 ruleSort
{ after(grammarAccess.getSortRule()); } 
	 EOF 
;

// Rule Sort
ruleSort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSortAccess().getGroup()); }
		(rule__Sort__Group__0)
		{ after(grammarAccess.getSortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSON
entryRuleJSON
:
{ before(grammarAccess.getJSONRule()); }
	 ruleJSON
{ after(grammarAccess.getJSONRule()); } 
	 EOF 
;

// Rule JSON
ruleJSON 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSONAccess().getAlternatives()); }
		(rule__JSON__Alternatives)
		{ after(grammarAccess.getJSONAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fun__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunAccess().getCountJsonParserRuleCall_0()); }
		ruleCountJson
		{ after(grammarAccess.getFunAccess().getCountJsonParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunAccess().getReadJsonParserRuleCall_1()); }
		ruleReadJson
		{ after(grammarAccess.getFunAccess().getReadJsonParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunAccess().getWriteJsonParserRuleCall_2()); }
		ruleWriteJson
		{ after(grammarAccess.getFunAccess().getWriteJsonParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunAccess().getWriteCSVParserRuleCall_3()); }
		ruleWriteCSV
		{ after(grammarAccess.getFunAccess().getWriteCSVParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getFunAccess().getRemoveParserRuleCall_4()); }
		ruleRemove
		{ after(grammarAccess.getFunAccess().getRemoveParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getFunAccess().getAddParserRuleCall_5()); }
		ruleAdd
		{ after(grammarAccess.getFunAccess().getAddParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getFunAccess().getGetParserRuleCall_6()); }
		ruleGet
		{ after(grammarAccess.getFunAccess().getGetParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getFunAccess().getSortParserRuleCall_7()); }
		ruleSort
		{ after(grammarAccess.getFunAccess().getSortParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONAccess().getGroup_0()); }
		(rule__JSON__Group_0__0)
		{ after(grammarAccess.getJSONAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getJSONAccess().getGroup_1()); }
		(rule__JSON__Group_1__0)
		{ after(grammarAccess.getJSONAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Alternatives_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONAccess().getValueSTRAssignment_1_1_2_0()); }
		(rule__JSON__ValueSTRAssignment_1_1_2_0)
		{ after(grammarAccess.getJSONAccess().getValueSTRAssignment_1_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getJSONAccess().getValueINTAssignment_1_1_2_1()); }
		(rule__JSON__ValueINTAssignment_1_1_2_1)
		{ after(grammarAccess.getJSONAccess().getValueINTAssignment_1_1_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getJSONAccess().getValueIDAssignment_1_1_2_2()); }
		(rule__JSON__ValueIDAssignment_1_1_2_2)
		{ after(grammarAccess.getJSONAccess().getValueIDAssignment_1_1_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountJson__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountJson__Group__0__Impl
	rule__CountJson__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CountJson__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountJsonAccess().getCountJSONAssignment_0()); }
	(rule__CountJson__CountJSONAssignment_0)
	{ after(grammarAccess.getCountJsonAccess().getCountJSONAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountJson__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountJson__Group__1__Impl
	rule__CountJson__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CountJson__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountJsonAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCountJsonAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountJson__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountJson__Group__2__Impl
	rule__CountJson__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CountJson__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountJsonAccess().getPathAssignment_2()); }
	(rule__CountJson__PathAssignment_2)
	{ after(grammarAccess.getCountJsonAccess().getPathAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountJson__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountJson__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CountJson__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountJsonAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getCountJsonAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReadJson__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadJson__Group__0__Impl
	rule__ReadJson__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadJson__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadJsonAccess().getReadJSONAssignment_0()); }
	(rule__ReadJson__ReadJSONAssignment_0)
	{ after(grammarAccess.getReadJsonAccess().getReadJSONAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadJson__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadJson__Group__1__Impl
	rule__ReadJson__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadJson__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadJsonAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getReadJsonAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadJson__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadJson__Group__2__Impl
	rule__ReadJson__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadJson__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadJsonAccess().getPathAssignment_2()); }
	(rule__ReadJson__PathAssignment_2)
	{ after(grammarAccess.getReadJsonAccess().getPathAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadJson__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReadJson__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadJson__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadJsonAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getReadJsonAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WriteJson__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteJson__Group__0__Impl
	rule__WriteJson__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteJsonAccess().getWriteJSONAssignment_0()); }
	(rule__WriteJson__WriteJSONAssignment_0)
	{ after(grammarAccess.getWriteJsonAccess().getWriteJSONAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteJson__Group__1__Impl
	rule__WriteJson__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteJsonAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWriteJsonAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteJson__Group__2__Impl
	rule__WriteJson__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteJsonAccess().getPathAssignment_2()); }
	(rule__WriteJson__PathAssignment_2)
	{ after(grammarAccess.getWriteJsonAccess().getPathAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteJson__Group__3__Impl
	rule__WriteJson__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteJsonAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getWriteJsonAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteJson__Group__4__Impl
	rule__WriteJson__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteJsonAccess().getFileAssignment_4()); }
	(rule__WriteJson__FileAssignment_4)
	{ after(grammarAccess.getWriteJsonAccess().getFileAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteJson__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteJsonAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getWriteJsonAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WriteCSV__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteCSV__Group__0__Impl
	rule__WriteCSV__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteCSVAccess().getWriteCSVAssignment_0()); }
	(rule__WriteCSV__WriteCSVAssignment_0)
	{ after(grammarAccess.getWriteCSVAccess().getWriteCSVAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteCSV__Group__1__Impl
	rule__WriteCSV__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteCSVAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWriteCSVAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteCSV__Group__2__Impl
	rule__WriteCSV__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteCSVAccess().getPathAssignment_2()); }
	(rule__WriteCSV__PathAssignment_2)
	{ after(grammarAccess.getWriteCSVAccess().getPathAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteCSV__Group__3__Impl
	rule__WriteCSV__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteCSVAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getWriteCSVAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteCSV__Group__4__Impl
	rule__WriteCSV__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteCSVAccess().getTabNameAssignment_4()); }
	(rule__WriteCSV__TabNameAssignment_4)
	{ after(grammarAccess.getWriteCSVAccess().getTabNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteCSV__Group__5__Impl
	rule__WriteCSV__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteCSVAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getWriteCSVAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteCSV__Group__6__Impl
	rule__WriteCSV__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteCSVAccess().getHeaderAssignment_6()); }
	(rule__WriteCSV__HeaderAssignment_6)
	{ after(grammarAccess.getWriteCSVAccess().getHeaderAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteCSV__Group__7__Impl
	rule__WriteCSV__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteCSVAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getWriteCSVAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteCSV__Group__8__Impl
	rule__WriteCSV__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteCSVAccess().getOutputFileAssignment_8()); }
	(rule__WriteCSV__OutputFileAssignment_8)
	{ after(grammarAccess.getWriteCSVAccess().getOutputFileAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WriteCSV__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteCSVAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getWriteCSVAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Remove__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__0__Impl
	rule__Remove__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getRemoveElementAssignment_0()); }
	(rule__Remove__RemoveElementAssignment_0)
	{ after(grammarAccess.getRemoveAccess().getRemoveElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__1__Impl
	rule__Remove__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__2__Impl
	rule__Remove__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getIdAssignment_2()); }
	(rule__Remove__IdAssignment_2)
	{ after(grammarAccess.getRemoveAccess().getIdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__3__Impl
	rule__Remove__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getRemoveAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__4__Impl
	rule__Remove__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getTabNameAssignment_4()); }
	(rule__Remove__TabNameAssignment_4)
	{ after(grammarAccess.getRemoveAccess().getTabNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__5__Impl
	rule__Remove__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getRemoveAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__6__Impl
	rule__Remove__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getFileAssignment_6()); }
	(rule__Remove__FileAssignment_6)
	{ after(grammarAccess.getRemoveAccess().getFileAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getRemoveAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAddElementAssignment_0()); }
	(rule__Add__AddElementAssignment_0)
	{ after(grammarAccess.getAddAccess().getAddElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__1__Impl
	rule__Add__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAddAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__2__Impl
	rule__Add__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getFileAssignment_2()); }
	(rule__Add__FileAssignment_2)
	{ after(grammarAccess.getAddAccess().getFileAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__3__Impl
	rule__Add__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAddAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__4__Impl
	rule__Add__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getIdAssignment_4()); }
	(rule__Add__IdAssignment_4)
	{ after(grammarAccess.getAddAccess().getIdAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAddAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Get__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group__0__Impl
	rule__Get__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getGetElementAssignment_0()); }
	(rule__Get__GetElementAssignment_0)
	{ after(grammarAccess.getGetAccess().getGetElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group__1__Impl
	rule__Get__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getGetAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group__2__Impl
	rule__Get__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getFileAssignment_2()); }
	(rule__Get__FileAssignment_2)
	{ after(grammarAccess.getGetAccess().getFileAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getGetAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sort__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sort__Group__0__Impl
	rule__Sort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortAccess().getSortAssignment_0()); }
	(rule__Sort__SortAssignment_0)
	{ after(grammarAccess.getSortAccess().getSortAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sort__Group__1__Impl
	rule__Sort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortAccess().getFileAssignment_1()); }
	(rule__Sort__FileAssignment_1)
	{ after(grammarAccess.getSortAccess().getFileAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sort__Group__2__Impl
	rule__Sort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortAccess().getByKeyword_2()); }
	'by'
	{ after(grammarAccess.getSortAccess().getByKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sort__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortAccess().getAttributeAssignment_3()); }
	(rule__Sort__AttributeAssignment_3)
	{ after(grammarAccess.getSortAccess().getAttributeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSON__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_0__0__Impl
	rule__JSON__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONAccess().getLeftCurlyBracketKeyword_0_0()); }
	'{'
	{ after(grammarAccess.getJSONAccess().getLeftCurlyBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_0__1__Impl
	rule__JSON__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getJSONAccess().getGroup_0_1()); }
		(rule__JSON__Group_0_1__0)
		{ after(grammarAccess.getJSONAccess().getGroup_0_1()); }
	)
	(
		{ before(grammarAccess.getJSONAccess().getGroup_0_1()); }
		(rule__JSON__Group_0_1__0)*
		{ after(grammarAccess.getJSONAccess().getGroup_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONAccess().getRightCurlyBracketKeyword_0_2()); }
	'}'
	{ after(grammarAccess.getJSONAccess().getRightCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSON__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_0_1__0__Impl
	rule__JSON__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONAccess().getAttributeAssignment_0_1_0()); }
	(rule__JSON__AttributeAssignment_0_1_0)
	{ after(grammarAccess.getJSONAccess().getAttributeAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONAccess().getSemicolonKeyword_0_1_1()); }
	';'
	{ after(grammarAccess.getJSONAccess().getSemicolonKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSON__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_1__0__Impl
	rule__JSON__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getJSONAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_1__1__Impl
	rule__JSON__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getJSONAccess().getGroup_1_1()); }
		(rule__JSON__Group_1_1__0)
		{ after(grammarAccess.getJSONAccess().getGroup_1_1()); }
	)
	(
		{ before(grammarAccess.getJSONAccess().getGroup_1_1()); }
		(rule__JSON__Group_1_1__0)*
		{ after(grammarAccess.getJSONAccess().getGroup_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getJSONAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSON__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_1_1__0__Impl
	rule__JSON__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONAccess().getAttributeAssignment_1_1_0()); }
	(rule__JSON__AttributeAssignment_1_1_0)
	{ after(grammarAccess.getJSONAccess().getAttributeAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_1_1__1__Impl
	rule__JSON__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONAccess().getEqualsSignKeyword_1_1_1()); }
	'='
	{ after(grammarAccess.getJSONAccess().getEqualsSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_1_1__2__Impl
	rule__JSON__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONAccess().getAlternatives_1_1_2()); }
	(rule__JSON__Alternatives_1_1_2)
	{ after(grammarAccess.getJSONAccess().getAlternatives_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONAccess().getSemicolonKeyword_1_1_3()); }
	';'
	{ after(grammarAccess.getJSONAccess().getSemicolonKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__SentencesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSentencesFunParserRuleCall_0()); }
		ruleFun
		{ after(grammarAccess.getModelAccess().getSentencesFunParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountJson__CountJSONAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountJsonAccess().getCountJSONCountKeyword_0_0()); }
		(
			{ before(grammarAccess.getCountJsonAccess().getCountJSONCountKeyword_0_0()); }
			'count'
			{ after(grammarAccess.getCountJsonAccess().getCountJSONCountKeyword_0_0()); }
		)
		{ after(grammarAccess.getCountJsonAccess().getCountJSONCountKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountJson__PathAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountJsonAccess().getPathSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCountJsonAccess().getPathSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadJson__ReadJSONAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadJsonAccess().getReadJSONReadJSONKeyword_0_0()); }
		(
			{ before(grammarAccess.getReadJsonAccess().getReadJSONReadJSONKeyword_0_0()); }
			'readJSON'
			{ after(grammarAccess.getReadJsonAccess().getReadJSONReadJSONKeyword_0_0()); }
		)
		{ after(grammarAccess.getReadJsonAccess().getReadJSONReadJSONKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadJson__PathAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadJsonAccess().getPathSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getReadJsonAccess().getPathSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__WriteJSONAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteJsonAccess().getWriteJSONWriteJSONKeyword_0_0()); }
		(
			{ before(grammarAccess.getWriteJsonAccess().getWriteJSONWriteJSONKeyword_0_0()); }
			'writeJSON'
			{ after(grammarAccess.getWriteJsonAccess().getWriteJSONWriteJSONKeyword_0_0()); }
		)
		{ after(grammarAccess.getWriteJsonAccess().getWriteJSONWriteJSONKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__PathAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteJsonAccess().getPathSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getWriteJsonAccess().getPathSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteJson__FileAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteJsonAccess().getFileJSONParserRuleCall_4_0()); }
		ruleJSON
		{ after(grammarAccess.getWriteJsonAccess().getFileJSONParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__WriteCSVAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteCSVAccess().getWriteCSVWriteCSVKeyword_0_0()); }
		(
			{ before(grammarAccess.getWriteCSVAccess().getWriteCSVWriteCSVKeyword_0_0()); }
			'writeCSV'
			{ after(grammarAccess.getWriteCSVAccess().getWriteCSVWriteCSVKeyword_0_0()); }
		)
		{ after(grammarAccess.getWriteCSVAccess().getWriteCSVWriteCSVKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__PathAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteCSVAccess().getPathSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getWriteCSVAccess().getPathSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__TabNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteCSVAccess().getTabNameSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getWriteCSVAccess().getTabNameSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__HeaderAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteCSVAccess().getHeaderSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getWriteCSVAccess().getHeaderSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WriteCSV__OutputFileAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteCSVAccess().getOutputFileSTRINGTerminalRuleCall_8_0()); }
		RULE_STRING
		{ after(grammarAccess.getWriteCSVAccess().getOutputFileSTRINGTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__RemoveElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveAccess().getRemoveElementRemoveKeyword_0_0()); }
		(
			{ before(grammarAccess.getRemoveAccess().getRemoveElementRemoveKeyword_0_0()); }
			'remove'
			{ after(grammarAccess.getRemoveAccess().getRemoveElementRemoveKeyword_0_0()); }
		)
		{ after(grammarAccess.getRemoveAccess().getRemoveElementRemoveKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__IdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveAccess().getIdINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRemoveAccess().getIdINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__TabNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveAccess().getTabNameSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getRemoveAccess().getTabNameSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__FileAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveAccess().getFileSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getRemoveAccess().getFileSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__AddElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getAddElementAddKeyword_0_0()); }
		(
			{ before(grammarAccess.getAddAccess().getAddElementAddKeyword_0_0()); }
			'add'
			{ after(grammarAccess.getAddAccess().getAddElementAddKeyword_0_0()); }
		)
		{ after(grammarAccess.getAddAccess().getAddElementAddKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__FileAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getFileJSONParserRuleCall_2_0()); }
		ruleJSON
		{ after(grammarAccess.getAddAccess().getFileJSONParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__IdAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getIdINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getAddAccess().getIdINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__GetElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getGetElementGetKeyword_0_0()); }
		(
			{ before(grammarAccess.getGetAccess().getGetElementGetKeyword_0_0()); }
			'get'
			{ after(grammarAccess.getGetAccess().getGetElementGetKeyword_0_0()); }
		)
		{ after(grammarAccess.getGetAccess().getGetElementGetKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__FileAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getFileJSONParserRuleCall_2_0()); }
		ruleJSON
		{ after(grammarAccess.getGetAccess().getFileJSONParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__SortAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortAccess().getSortSortKeyword_0_0()); }
		(
			{ before(grammarAccess.getSortAccess().getSortSortKeyword_0_0()); }
			'sort'
			{ after(grammarAccess.getSortAccess().getSortSortKeyword_0_0()); }
		)
		{ after(grammarAccess.getSortAccess().getSortSortKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__FileAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortAccess().getFileJSONParserRuleCall_1_0()); }
		ruleJSON
		{ after(grammarAccess.getSortAccess().getFileJSONParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__AttributeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortAccess().getAttributeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSortAccess().getAttributeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__AttributeAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONAccess().getAttributeIDTerminalRuleCall_0_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getJSONAccess().getAttributeIDTerminalRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__AttributeAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONAccess().getAttributeSTRINGTerminalRuleCall_1_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getJSONAccess().getAttributeSTRINGTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__ValueSTRAssignment_1_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONAccess().getValueSTRSTRINGTerminalRuleCall_1_1_2_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getJSONAccess().getValueSTRSTRINGTerminalRuleCall_1_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__ValueINTAssignment_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONAccess().getValueINTINTTerminalRuleCall_1_1_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getJSONAccess().getValueINTINTTerminalRuleCall_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON__ValueIDAssignment_1_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONAccess().getValueIDIDTerminalRuleCall_1_1_2_2_0()); }
		RULE_ID
		{ after(grammarAccess.getJSONAccess().getValueIDIDTerminalRuleCall_1_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
