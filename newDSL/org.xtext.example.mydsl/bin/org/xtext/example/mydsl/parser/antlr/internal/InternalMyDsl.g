/*
 * generated by Xtext 2.28.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getSentencesFunParserRuleCall_0());
			}
			lv_sentences_0_0=ruleFun
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"sentences",
					lv_sentences_0_0,
					"org.xtext.example.mydsl.MyDsl.Fun");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleFun
entryRuleFun returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunRule()); }
	iv_ruleFun=ruleFun
	{ $current=$iv_ruleFun.current; }
	EOF;

// Rule Fun
ruleFun returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunAccess().getCountJsonParserRuleCall_0());
		}
		this_CountJson_0=ruleCountJson
		{
			$current = $this_CountJson_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getReadJsonParserRuleCall_1());
		}
		this_ReadJson_1=ruleReadJson
		{
			$current = $this_ReadJson_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getPrintJsonParserRuleCall_2());
		}
		this_PrintJson_2=rulePrintJson
		{
			$current = $this_PrintJson_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getWriteJsonParserRuleCall_3());
		}
		this_WriteJson_3=ruleWriteJson
		{
			$current = $this_WriteJson_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getWriteCSVParserRuleCall_4());
		}
		this_WriteCSV_4=ruleWriteCSV
		{
			$current = $this_WriteCSV_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getRemoveParserRuleCall_5());
		}
		this_Remove_5=ruleRemove
		{
			$current = $this_Remove_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getAddParserRuleCall_6());
		}
		this_Add_6=ruleAdd
		{
			$current = $this_Add_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getGetParserRuleCall_7());
		}
		this_Get_7=ruleGet
		{
			$current = $this_Get_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getSortParserRuleCall_8());
		}
		this_Sort_8=ruleSort
		{
			$current = $this_Sort_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunAccess().getShowParserRuleCall_9());
		}
		this_Show_9=ruleShow
		{
			$current = $this_Show_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCountJson
entryRuleCountJson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountJsonRule()); }
	iv_ruleCountJson=ruleCountJson
	{ $current=$iv_ruleCountJson.current; }
	EOF;

// Rule CountJson
ruleCountJson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_countJSON_0_0='count'
				{
					newLeafNode(lv_countJSON_0_0, grammarAccess.getCountJsonAccess().getCountJSONCountKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCountJsonRule());
					}
					setWithLastConsumed($current, "countJSON", lv_countJSON_0_0, "count");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCountJsonAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCountJsonAccess().getValueTypeStringParserRuleCall_2_0());
				}
				lv_value_2_0=ruleTypeString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountJsonRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.MyDsl.TypeString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCountJsonAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleReadJson
entryRuleReadJson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadJsonRule()); }
	iv_ruleReadJson=ruleReadJson
	{ $current=$iv_ruleReadJson.current; }
	EOF;

// Rule ReadJson
ruleReadJson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_readJSON_0_0='read'
				{
					newLeafNode(lv_readJSON_0_0, grammarAccess.getReadJsonAccess().getReadJSONReadKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadJsonRule());
					}
					setWithLastConsumed($current, "readJSON", lv_readJSON_0_0, "read");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getReadJsonAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_path_2_0=RULE_STRING
				{
					newLeafNode(lv_path_2_0, grammarAccess.getReadJsonAccess().getPathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadJsonRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getReadJsonAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulePrintJson
entryRulePrintJson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintJsonRule()); }
	iv_rulePrintJson=rulePrintJson
	{ $current=$iv_rulePrintJson.current; }
	EOF;

// Rule PrintJson
rulePrintJson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_printJson_0_0='print'
				{
					newLeafNode(lv_printJson_0_0, grammarAccess.getPrintJsonAccess().getPrintJsonPrintKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrintJsonRule());
					}
					setWithLastConsumed($current, "printJson", lv_printJson_0_0, "print");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPrintJsonAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getPrintJsonAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrintJsonRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getPrintJsonAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleWriteJson
entryRuleWriteJson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWriteJsonRule()); }
	iv_ruleWriteJson=ruleWriteJson
	{ $current=$iv_ruleWriteJson.current; }
	EOF;

// Rule WriteJson
ruleWriteJson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_writeJSON_0_0='writeJSON'
				{
					newLeafNode(lv_writeJSON_0_0, grammarAccess.getWriteJsonAccess().getWriteJSONWriteJSONKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteJsonRule());
					}
					setWithLastConsumed($current, "writeJSON", lv_writeJSON_0_0, "writeJSON");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWriteJsonAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_path_2_0=RULE_STRING
				{
					newLeafNode(lv_path_2_0, grammarAccess.getWriteJsonAccess().getPathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteJsonRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getWriteJsonAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWriteJsonAccess().getValueTypeJSONParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleTypeJSON
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWriteJsonRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"org.xtext.example.mydsl.MyDsl.TypeJSON");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getWriteJsonAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleWriteCSV
entryRuleWriteCSV returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWriteCSVRule()); }
	iv_ruleWriteCSV=ruleWriteCSV
	{ $current=$iv_ruleWriteCSV.current; }
	EOF;

// Rule WriteCSV
ruleWriteCSV returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_writeCVS_0_0='writeCSV'
				{
					newLeafNode(lv_writeCVS_0_0, grammarAccess.getWriteCSVAccess().getWriteCVSWriteCSVKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCSVRule());
					}
					setWithLastConsumed($current, "writeCVS", lv_writeCVS_0_0, "writeCSV");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWriteCSVAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_path_2_0=RULE_STRING
				{
					newLeafNode(lv_path_2_0, grammarAccess.getWriteCSVAccess().getPathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWriteCSVRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getWriteCSVAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWriteCSVAccess().getValueTypeJSONParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleTypeJSON
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWriteCSVRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"org.xtext.example.mydsl.MyDsl.TypeJSON");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getWriteCSVAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleRemove
entryRuleRemove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveRule()); }
	iv_ruleRemove=ruleRemove
	{ $current=$iv_ruleRemove.current; }
	EOF;

// Rule Remove
ruleRemove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_removeElement_0_0='remove'
				{
					newLeafNode(lv_removeElement_0_0, grammarAccess.getRemoveAccess().getRemoveElementRemoveKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRemoveRule());
					}
					setWithLastConsumed($current, "removeElement", lv_removeElement_0_0, "remove");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRemoveAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_id_2_0=RULE_STRING
				{
					newLeafNode(lv_id_2_0, grammarAccess.getRemoveAccess().getIdSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRemoveRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRemoveAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_addElement_0_0='add'
				{
					newLeafNode(lv_addElement_0_0, grammarAccess.getAddAccess().getAddElementAddKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddRule());
					}
					setWithLastConsumed($current, "addElement", lv_addElement_0_0, "add");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAddAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getValueTypeJSONParserRuleCall_2_0());
				}
				lv_value_2_0=ruleTypeJSON
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.MyDsl.TypeJSON");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getAddAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleGet
entryRuleGet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetRule()); }
	iv_ruleGet=ruleGet
	{ $current=$iv_ruleGet.current; }
	EOF;

// Rule Get
ruleGet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_getElement_0_0='get'
				{
					newLeafNode(lv_getElement_0_0, grammarAccess.getGetAccess().getGetElementGetKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGetRule());
					}
					setWithLastConsumed($current, "getElement", lv_getElement_0_0, "get");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getGetAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_id_2_0=RULE_STRING
				{
					newLeafNode(lv_id_2_0, grammarAccess.getGetAccess().getIdSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGetRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getGetAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSort
entryRuleSort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortRule()); }
	iv_ruleSort=ruleSort
	{ $current=$iv_ruleSort.current; }
	EOF;

// Rule Sort
ruleSort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_sort_0_0='sort'
				{
					newLeafNode(lv_sort_0_0, grammarAccess.getSortAccess().getSortSortKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortRule());
					}
					setWithLastConsumed($current, "sort", lv_sort_0_0, "sort");
				}
			)
		)
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getSortAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='by'
		{
			newLeafNode(otherlv_2, grammarAccess.getSortAccess().getByKeyword_2());
		}
		(
			(
				lv_attribute_3_0=RULE_STRING
				{
					newLeafNode(lv_attribute_3_0, grammarAccess.getSortAccess().getAttributeSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortRule());
					}
					setWithLastConsumed(
						$current,
						"attribute",
						lv_attribute_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleShow
entryRuleShow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShowRule()); }
	iv_ruleShow=ruleShow
	{ $current=$iv_ruleShow.current; }
	EOF;

// Rule Show
ruleShow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_show_0_0='show'
				{
					newLeafNode(lv_show_0_0, grammarAccess.getShowAccess().getShowShowKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShowRule());
					}
					setWithLastConsumed($current, "show", lv_show_0_0, "show");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getShowAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					lv_name_2_0=RULE_STRING
					{
						newLeafNode(lv_name_2_0, grammarAccess.getShowAccess().getNameSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShowRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getShowAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceRule()); }
	iv_ruleTypeReference=ruleTypeReference
	{ $current=$iv_ruleTypeReference.current; }
	EOF;

// Rule TypeReference
ruleTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeReferenceAccess().getTypeIntParserRuleCall_0());
		}
		this_TypeInt_0=ruleTypeInt
		{
			$current = $this_TypeInt_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeReferenceAccess().getTypeStringParserRuleCall_1());
		}
		this_TypeString_1=ruleTypeString
		{
			$current = $this_TypeString_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeReferenceAccess().getTypeJSONParserRuleCall_2());
		}
		this_TypeJSON_2=ruleTypeJSON
		{
			$current = $this_TypeJSON_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeInt
entryRuleTypeInt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeIntRule()); }
	iv_ruleTypeInt=ruleTypeInt
	{ $current=$iv_ruleTypeInt.current; }
	EOF;

// Rule TypeInt
ruleTypeInt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_val_0_0=RULE_INT
			{
				newLeafNode(lv_val_0_0, grammarAccess.getTypeIntAccess().getValINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeIntRule());
				}
				setWithLastConsumed(
					$current,
					"val",
					lv_val_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleTypeString
entryRuleTypeString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeStringRule()); }
	iv_ruleTypeString=ruleTypeString
	{ $current=$iv_ruleTypeString.current; }
	EOF;

// Rule TypeString
ruleTypeString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_val_0_0=RULE_STRING
			{
				newLeafNode(lv_val_0_0, grammarAccess.getTypeStringAccess().getValSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeStringRule());
				}
				setWithLastConsumed(
					$current,
					"val",
					lv_val_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleTypeJSON
entryRuleTypeJSON returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeJSONRule()); }
	iv_ruleTypeJSON=ruleTypeJSON
	{ $current=$iv_ruleTypeJSON.current; }
	EOF;

// Rule TypeJSON
ruleTypeJSON returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='{'
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeJSONAccess().getLeftCurlyBracketKeyword_0_0());
			}
			(
				(
					(
						lv_attribute_1_0=RULE_STRING
						{
							newLeafNode(lv_attribute_1_0, grammarAccess.getTypeJSONAccess().getAttributeSTRINGTerminalRuleCall_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTypeJSONRule());
							}
							addWithLastConsumed(
								$current,
								"attribute",
								lv_attribute_1_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getTypeJSONAccess().getEqualsSignKeyword_0_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeJSONAccess().getValueTypeReferenceParserRuleCall_0_1_2_0());
						}
						lv_value_3_0=ruleTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeJSONRule());
							}
							add(
								$current,
								"value",
								lv_value_3_0,
								"org.xtext.example.mydsl.MyDsl.TypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=';'
				{
					newLeafNode(otherlv_4, grammarAccess.getTypeJSONAccess().getSemicolonKeyword_0_1_3());
				}
			)+
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getTypeJSONAccess().getRightCurlyBracketKeyword_0_2());
			}
		)
		    |
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getTypeJSONAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					(
						lv_attribute_7_0=RULE_STRING
						{
							newLeafNode(lv_attribute_7_0, grammarAccess.getTypeJSONAccess().getAttributeSTRINGTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTypeJSONRule());
							}
							addWithLastConsumed(
								$current,
								"attribute",
								lv_attribute_7_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				otherlv_8=':'
				{
					newLeafNode(otherlv_8, grammarAccess.getTypeJSONAccess().getColonKeyword_1_1_1());
				}
				otherlv_9='{'
				{
					newLeafNode(otherlv_9, grammarAccess.getTypeJSONAccess().getLeftCurlyBracketKeyword_1_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeJSONAccess().getValueTypeReferenceParserRuleCall_1_1_3_0());
						}
						lv_value_10_0=ruleTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeJSONRule());
							}
							add(
								$current,
								"value",
								lv_value_10_0,
								"org.xtext.example.mydsl.MyDsl.TypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_11='}'
				{
					newLeafNode(otherlv_11, grammarAccess.getTypeJSONAccess().getRightCurlyBracketKeyword_1_1_4());
				}
				otherlv_12=';'
				{
					newLeafNode(otherlv_12, grammarAccess.getTypeJSONAccess().getSemicolonKeyword_1_1_5());
				}
			)+
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getTypeJSONAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
		    |
		(
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getTypeJSONAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				(
					(
						lv_attribute_15_0=RULE_STRING
						{
							newLeafNode(lv_attribute_15_0, grammarAccess.getTypeJSONAccess().getAttributeSTRINGTerminalRuleCall_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTypeJSONRule());
							}
							addWithLastConsumed(
								$current,
								"attribute",
								lv_attribute_15_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				otherlv_16=':'
				{
					newLeafNode(otherlv_16, grammarAccess.getTypeJSONAccess().getColonKeyword_2_1_1());
				}
				otherlv_17='['
				{
					newLeafNode(otherlv_17, grammarAccess.getTypeJSONAccess().getLeftSquareBracketKeyword_2_1_2());
				}
				otherlv_18='{'
				{
					newLeafNode(otherlv_18, grammarAccess.getTypeJSONAccess().getLeftCurlyBracketKeyword_2_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeJSONAccess().getValueTypeReferenceParserRuleCall_2_1_4_0());
						}
						lv_value_19_0=ruleTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeJSONRule());
							}
							add(
								$current,
								"value",
								lv_value_19_0,
								"org.xtext.example.mydsl.MyDsl.TypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_20='}'
				{
					newLeafNode(otherlv_20, grammarAccess.getTypeJSONAccess().getRightCurlyBracketKeyword_2_1_5());
				}
				otherlv_21=']'
				{
					newLeafNode(otherlv_21, grammarAccess.getTypeJSONAccess().getRightSquareBracketKeyword_2_1_6());
				}
				otherlv_22=';'
				{
					newLeafNode(otherlv_22, grammarAccess.getTypeJSONAccess().getSemicolonKeyword_2_1_7());
				}
			)+
			otherlv_23='}'
			{
				newLeafNode(otherlv_23, grammarAccess.getTypeJSONAccess().getRightCurlyBracketKeyword_2_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
